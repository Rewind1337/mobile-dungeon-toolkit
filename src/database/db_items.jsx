import { ATTRIBUTE, RARITY, PERKS, UNIQUE_SKILLS, EQUIPMENT_SLOT, PRIMARY_STAT } from "./enums"
import { itemSprites, iconSprites } from "./db_sprites";

let ITEM_SETS = []
let BASE_ITEMS = {
    WEAPONS: [],
    HELMETS: [],
    ARMORS: [],
    NECKLACES: [],
    RINGS: [],
    OTHER: [] // not implemented
}

function add_set(name, setBonus, pieces, attributeRequirement) {
    let id = ITEM_SETS.length
    ITEM_SETS.push({ id: id, name: name, setBonus: setBonus, pieces: pieces, attributeRequirement: attributeRequirement })
}

function get_set_id_by_name(name) {
    for (let i = 0; i < ITEM_SETS.length; i++) {
        if (ITEM_SETS[i].name == name) { return ITEM_SETS[i].id }
    }
    return undefined
}

function add_weapon(name, attribute, unique, rarity, attributeRequirement, baseAttribute) {
    let id = BASE_ITEMS.WEAPONS.length
    let normalizedName = name.toLowerCase().replace(/[^a-z']/g, '_').replace(/[']/g, '');
    unique = (unique != undefined ? unique : UNIQUE_SKILLS.NOTHING)
    let perkAmount = Math.min(rarity - 1, 3) + (unique ? 0 : 1)
    let perks = Array(perkAmount).fill("NOTHING")
    BASE_ITEMS.WEAPONS.push({
        id: id, slot: EQUIPMENT_SLOT.WEAPON, name: name, attribute: attribute, unique: unique, rarity: rarity, attributeRequirement: attributeRequirement, baseAttribute: baseAttribute,
        itemSrc: (itemSprites[normalizedName] !== undefined ? itemSprites[normalizedName] : itemSprites["null"]),
        iconSrc: (unique ? iconSprites["unique"] : null),
        iconType: (unique ? "unique" : "null"),
        perks: perks
    })
}

function add_equipment(slot, name, attribute, set, rarity, attributeRequirement, baseAttribute) {
    let normalizedName = name.toLowerCase().replace(/[^a-z]/g, '_');
    set = get_set_id_by_name(set);
    set = (set != undefined ? set : -1)
    let typeOfSet = "null"
    if (set >= 0) {
        let setPieces = ITEM_SETS[set].pieces
        if (setPieces == 2) {
            typeOfSet = "twoset"
        } else if (setPieces == 4) {
            typeOfSet = "fourset"
        }
    }
    let perkAmount = Math.min(rarity - 1, 3) + (set ? 0 : 1)
    let perks = Array(perkAmount).fill("NOTHING")
    let id
    switch (slot) {
        case EQUIPMENT_SLOT.HELMET:
            id = BASE_ITEMS.HELMETS.length
            BASE_ITEMS.HELMETS.push({
                id: id, slot: slot, name: name, attribute: attribute, set: set, rarity: rarity, attributeRequirement: attributeRequirement, baseAttribute: baseAttribute,
                itemSrc: (itemSprites[normalizedName] !== undefined ? itemSprites[normalizedName] : itemSprites["null"]),
                iconSrc: (iconSprites[typeOfSet]),
                iconType: typeOfSet,
                perks: perks
            })
            break;
        case EQUIPMENT_SLOT.ARMOR:
            id = BASE_ITEMS.ARMORS.length
            BASE_ITEMS.ARMORS.push({
                id: id, slot: slot, name: name, attribute: attribute, set: set, rarity: rarity, attributeRequirement: attributeRequirement, baseAttribute: baseAttribute,
                itemSrc: (itemSprites[normalizedName] !== undefined ? itemSprites[normalizedName] : itemSprites["null"]),
                iconSrc: (set >= 0 ? iconSprites[typeOfSet] : null),
                iconType: typeOfSet,
                perks: perks
            })
            break;
        case EQUIPMENT_SLOT.NECKLACE:
            id = BASE_ITEMS.NECKLACES.length
            BASE_ITEMS.NECKLACES.push({
                id: id, slot: slot, name: name, attribute: attribute, set: set, rarity: rarity, attributeRequirement: attributeRequirement, baseAttribute: baseAttribute,
                itemSrc: (itemSprites[normalizedName] !== undefined ? itemSprites[normalizedName] : itemSprites["null"]),
                iconSrc: (set >= 0 ? iconSprites[typeOfSet] : null),
                iconType: typeOfSet,
                perks: perks
            })
            break;
        case EQUIPMENT_SLOT.RING:
            id = BASE_ITEMS.RINGS.length
            BASE_ITEMS.RINGS.push({
                id: id, slot: slot, name: name, attribute: attribute, set: set, rarity: rarity, attributeRequirement: attributeRequirement, baseAttribute: baseAttribute,
                itemSrc: (itemSprites[normalizedName] !== undefined ? itemSprites[normalizedName] : itemSprites["null"]),
                iconSrc: (set >= 0 ? iconSprites[typeOfSet] : null),
                iconType: typeOfSet,
                perks: perks
            })
            break;
        case EQUIPMENT_SLOT.OTHER:
            // not implemented
            break;
        default:
            break;
    }
}

export function init_item_db() {
    // STRENGTH SETS
    add_set("Downhole", [PERKS.HEALTH_PERCENT, PERKS.AP_DAMAGE_REDUCTION], 2, ATTRIBUTE.STRENGTH)
    add_set("Thorn", [PERKS.HEALTH_PERCENT, PERKS.CRIT_RESISTANCE], 2, ATTRIBUTE.STRENGTH)
    add_set("Breaker", [PERKS.DEFENCE_PERCENT, PERKS.BOSS_DAMAGE, PERKS.CRIT_CHANCE], 4, ATTRIBUTE.STRENGTH)
    add_set("Goliath", [PERKS.ATTACK_PERCENT, PERKS.CRIT_DAMAGE, PERKS.LIFE_STEAL], 4, ATTRIBUTE.STRENGTH)
    add_set("Titan", [PERKS.HEALTH_PERCENT, PERKS.BOSS_DAMAGE_REDUCTION, PERKS.AP_DAMAGE_REDUCTION], 4, ATTRIBUTE.STRENGTH)

    add_set("Ringmaster", [PERKS.ATTACK_PERCENT, PERKS.BOSS_DAMAGE], 2, ATTRIBUTE.STRENGTH)
    add_set("Nova", [PERKS.DEFENCE_PERCENT, PERKS.LIFE_STEAL, PERKS.CRIT_CHANCE], 4, ATTRIBUTE.STRENGTH)

    // INTELLIGENCE SETS
    add_set("Cyber", [PERKS.DEFENCE_PERCENT, PERKS.CRIT_DAMAGE_REDUCTION], 2, ATTRIBUTE.INTELLIGENCE)
    add_set("Pumpkin", [PERKS.HEALTH_PERCENT, PERKS.RESISTANCE], 2, ATTRIBUTE.INTELLIGENCE)
    add_set("Warlock", [PERKS.ATTACK_PERCENT, PERKS.CRIT_CHANCE, PERKS.CRIT_DAMAGE], 4, ATTRIBUTE.INTELLIGENCE)
    add_set("Warden", [PERKS.HEALTH_PERCENT, PERKS.CRIT_RESISTANCE, PERKS.AP_DAMAGE_REDUCTION], 4, ATTRIBUTE.INTELLIGENCE)
    add_set("Saint", [PERKS.AGILITY_PERCENT, PERKS.HEALING_RECOVERY, PERKS.HEALING_EFFICIENCY], 4, ATTRIBUTE.INTELLIGENCE)

    add_set("Lab", [PERKS.AGILITY_PERCENT, PERKS.CRIT_CHANCE], 2, ATTRIBUTE.INTELLIGENCE)
    add_set("Elementor", [PERKS.ATTACK_PERCENT, PERKS.ACCURACY, PERKS.BOSS_DAMAGE], 4, ATTRIBUTE.INTELLIGENCE)

    // AGILITY SETS
    add_set("Dragonbone", [PERKS.ATTACK_PERCENT, PERKS.CRIT_DAMAGE], 2, ATTRIBUTE.DEXTERITY)
    add_set("Burnt", [PERKS.AGILITY_PERCENT, PERKS.ACCURACY], 2, ATTRIBUTE.DEXTERITY)
    add_set("Hunter", [PERKS.ATTACK_PERCENT, PERKS.BOSS_DAMAGE, PERKS.CRIT_DAMAGE], 4, ATTRIBUTE.DEXTERITY)
    add_set("Jester", [PERKS.AGILITY_PERCENT, PERKS.HEALING_RECOVERY, PERKS.CRIT_CHANCE], 4, ATTRIBUTE.DEXTERITY)
    add_set("Specter", [PERKS.HEALTH_PERCENT, PERKS.CRIT_RESISTANCE, PERKS.AP_DAMAGE_REDUCTION], 4, ATTRIBUTE.DEXTERITY)

    add_set("Eclipse", [PERKS.AGILITY_PERCENT, PERKS.CRIT_CHANCE, PERKS.CRIT_DAMAGE], 4, ATTRIBUTE.DEXTERITY)

    // SHARED SETS (RINGS & NECKLACES)
    add_set("Celestial", [PERKS.AGILITY_PERCENT, PERKS.HEALING_EFFICIENCY], 2, ATTRIBUTE.NONE)
    add_set("Weaver", [PERKS.ATTACK_PERCENT, PERKS.CRIT_CHANCE], 2, ATTRIBUTE.NONE)
    add_set("Mystic", [PERKS.DEFENCE_PERCENT, PERKS.AOE_DAMAGE_REDUCTION], 2, ATTRIBUTE.NONE)


    // STRENGTH WEAPONS
    add_weapon("Pumpkin Scythe", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.PUMPKIN_SCYTHE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Hydras Bite", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.HYDRAS_BITE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Vampire's Stake", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.VAMPIRES_STAKE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Light Axe", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.LIGHT_AXE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Sky Piercer", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.SKY_PIERCER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Void Piercer Lance", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.VOID_PIERCER_LANCE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)
    add_weapon("Harmony", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.HARMONY, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.AGILITY)

    add_weapon("Light Sword", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.LIGHT_SWORD, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Void Splitter", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.VOID_SPLITTER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Sun Splitter", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.SUN_SPLITTER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Rust Binder", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.RUST_BINDER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Magma Edge", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.MAGMA_EDGE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Frost Binder", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.FROST_BINDER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)
    add_weapon("Chopocalypse", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.CHOPOCALYPSE, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.ATTACK)

    add_weapon("Rotten Maul", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.ROTTEN_MAUL, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Hook Hammer", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.HOOK_HAMMER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Drill Slammer", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.DRILL_SLAMMER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Titan's Maul", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.TITANS_MAUL, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Earth Breaker", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.EARTH_BREAKER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Problem Solver", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.PROBLEM_SOLVER, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)
    add_weapon("Singularity", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.SINGULARITY, RARITY.RARE, ATTRIBUTE.STRENGTH, PRIMARY_STAT.DEFENCE)

    // INTELLIGENCE WEAPONS
    add_weapon("Arcane Codex", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.ARCANE_CODEX, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.AGILITY)
    add_weapon("Last Oath", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.LAST_OATH, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.AGILITY)
    add_weapon("God's Vow", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.GODS_VOW, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.AGILITY)
    add_weapon("Tome of Eternal Frost", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.TOME_OF_ETERNAL_FROST, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.AGILITY)
    add_weapon("Research Log", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.RESEARCH_LOG, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.AGILITY)

    add_weapon("Pest Bringer", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.PEST_BRINGER, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)
    add_weapon("Embryonic Catalyst", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.EMBRYONIC_CATALYST, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)
    add_weapon("Icicle", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.ICILE, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)
    add_weapon("Rainbow Staff", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.RAINBOW_STAFF, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)
    add_weapon("Arcane Pulse", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.ARCANE_PULSE, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)
    add_weapon("Equilibrium", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.EQUILIBRIUM, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.ATTACK)

    add_weapon("Miasma Staff", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.MIASMA_STAFF, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Fire Starter", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.FIRE_STARTER, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Life Catalyst", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.LIFE_CATALYST, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Basilisk's Eye", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.BASILISKS_EYE, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Seed of Rot", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.SEED_OF_ROT, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Soul Catalyst", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.SOUL_CATALYST, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Insanity Catalyst", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.INSANITY_CATALYST, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)
    add_weapon("Duality", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.DUALITY, RARITY.RARE, ATTRIBUTE.INTELLIGENCE, PRIMARY_STAT.DEFENCE)

    // AGILITY WEAPONS
    add_weapon("Blaster", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.BLASTER, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Boomstick", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.BOOMSTICK, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Wolf Claws", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.WOLF_CLAWS, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Corkscrew Knuckle", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.CORKSCREW_KNUCKLE, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Shadow Fangs", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.SHADOW_SPIKES, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Vortex Dancer", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.VORTEX_DANCER, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Brute Force", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.BRUTE_FORCE, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Clawtastrophe", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.CLAWTASTROPHE, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)
    add_weapon("Starfall", [PERKS.AGILITY_FLAT], UNIQUE_SKILLS.STARFALL, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.AGILITY)

    add_weapon("Bone Bow", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.BONE_BOW, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)
    add_weapon("Soul Stabber", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.SOUL_STABBER, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)
    add_weapon("Whisper Blade", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.WHISPER_BLADE, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)
    add_weapon("Shadow Spikes", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.SHADOW_SPIKES, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)
    add_weapon("Needle Point", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.NEEDLE_POINT, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)
    add_weapon("Twilight", [PERKS.ATTACK_FLAT], UNIQUE_SKILLS.TWILIGHT, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.ATTACK)

    add_weapon("Starfire Ballista", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.STARFIRE_BALLISTA, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.DEFENCE)
    add_weapon("Black Feather Bow", [PERKS.DEFENCE_FLAT], UNIQUE_SKILLS.BLACK_FEATHER_BOW, RARITY.RARE, ATTRIBUTE.DEXTERITY, PRIMARY_STAT.DEFENCE)

    // STRENGTH SET PIECES
    add_equipment(EQUIPMENT_SLOT.HELMET, "Downhole Helmet", [PERKS.HEALTH_FLAT], "Downhole", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Downhole Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Downhole", RARITY.RARE, ATTRIBUTE.STRENGTH)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Thorn Helmet", [PERKS.HEALTH_FLAT], "Thorn", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Thorn Armor", [PERKS.DEFENCE_FLAT, PERKS.HEALTH_FLAT], "Thorn", RARITY.RARE, ATTRIBUTE.STRENGTH)

    //check stats below here
    add_equipment(EQUIPMENT_SLOT.HELMET, "Breaker Helmet", [PERKS.HEALTH_FLAT], "Breaker", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Breaker Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Breaker", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.RING, "Breaker Ring", [PERKS.HEALTH_FLAT], "Breaker", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Breaker Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Breaker", RARITY.RARE, ATTRIBUTE.STRENGTH)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Goliath Helmet", [PERKS.HEALTH_FLAT], "Goliath", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Goliath Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Goliath", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.RING, "Goliath Ring", [PERKS.HEALTH_FLAT], "Goliath", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Goliath Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Goliath", RARITY.RARE, ATTRIBUTE.STRENGTH)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Titan Helmet", [PERKS.HEALTH_FLAT], "Titan", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Titan Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Titan", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.RING, "Titan Ring", [PERKS.HEALTH_FLAT], "Titan", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Titan Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Titan", RARITY.RARE, ATTRIBUTE.STRENGTH)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Ringmaster Helmet", [PERKS.HEALTH_FLAT], "Ringmaster", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Ringmaster Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Ringmaster", RARITY.RARE, ATTRIBUTE.STRENGTH)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Nova Helmet", [PERKS.HEALTH_FLAT], "Nova", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Nova Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Nova", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.RING, "Nova Ring", [PERKS.HEALTH_FLAT], "Nova", RARITY.RARE, ATTRIBUTE.STRENGTH)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Nova Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Nova", RARITY.RARE, ATTRIBUTE.STRENGTH)

    // INTELLIGENCE SET PIECES
    add_equipment(EQUIPMENT_SLOT.HELMET, "Cyber Helmet", [PERKS.HEALTH_FLAT], "Cyber", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Cyber Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Cyber", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Pumpkin Helmet", [PERKS.HEALTH_FLAT], "Pumpkin", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Pumpkin Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Pumpkin", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Warlock Helmet", [PERKS.HEALTH_FLAT], "Warlock", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Warlock Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Warlock", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.RING, "Warlock Ring", [PERKS.HEALTH_FLAT], "Warlock", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Warlock Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Warlock", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Warden Helmet", [PERKS.HEALTH_FLAT], "Warden", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Warden Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Warden", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.RING, "Warden Ring", [PERKS.HEALTH_FLAT], "Warden", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Warden Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Warden", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Saint Helmet", [PERKS.HEALTH_FLAT], "Saint", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Saint Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Saint", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.RING, "Saint Ring", [PERKS.HEALTH_FLAT], "Saint", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Saint Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Saint", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Lab Helmet", [PERKS.HEALTH_FLAT], "Lab", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Lab Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Lab", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Elementor Helmet", [PERKS.HEALTH_FLAT], "Elementor", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Elementor Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Elementor", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.RING, "Elementor Ring", [PERKS.HEALTH_FLAT], "Elementor", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Elementor Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Elementor", RARITY.RARE, ATTRIBUTE.INTELLIGENCE)

    // DEXTERITY SET PIECES
    add_equipment(EQUIPMENT_SLOT.HELMET, "Burnt Helmet", [PERKS.HEALTH_FLAT], "Burnt", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Burnt Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Burnt", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Dragonbone Helmet", [PERKS.HEALTH_FLAT], "Dragonbone", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Dragonbone Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Dragonbone", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Hunter Helmet", [PERKS.HEALTH_FLAT], "Hunter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Hunter Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Hunter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.RING, "Hunter Ring", [PERKS.HEALTH_FLAT], "Hunter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Hunter Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Hunter", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Jester Helmet", [PERKS.HEALTH_FLAT], "Jester", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Jester Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Jester", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.RING, "Jester Ring", [PERKS.HEALTH_FLAT], "Jester", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Jester Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Jester", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Specter Helmet", [PERKS.HEALTH_FLAT], "Specter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Specter Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Specter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.RING, "Specter Ring", [PERKS.HEALTH_FLAT], "Specter", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Specter Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Specter", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    add_equipment(EQUIPMENT_SLOT.HELMET, "Eclipse Helmet", [PERKS.HEALTH_FLAT], "Eclipse", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.ARMOR, "Eclipse Armor", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Eclipse", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.RING, "Eclipse Ring", [PERKS.HEALTH_FLAT], "Eclipse", RARITY.RARE, ATTRIBUTE.DEXTERITY)
    add_equipment(EQUIPMENT_SLOT.NECKLACE, "Eclipse Necklace", [PERKS.DEFENCE_FLAT, PERKS.ATTACK_FLAT], "Eclipse", RARITY.RARE, ATTRIBUTE.DEXTERITY)

    return { ITEM_SETS: ITEM_SETS, BASE_ITEMS: BASE_ITEMS }
}